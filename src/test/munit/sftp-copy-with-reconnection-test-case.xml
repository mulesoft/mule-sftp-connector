<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp"
      xmlns:java="http://www.mulesoft.org/schema/mule/java"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:connection-test="http://www.mulesoft.org/schema/mule/connection-test"
      xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
        http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd
        http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd
        http://www.mulesoft.org/schema/mule/connection-test http://www.mulesoft.org/schema/mule/connection-test/current/mule-connection-test.xsd">

    <munit:config name="sftp-copy-with-reconnection-test-case.xml"/>

    <munit:before-suite name="before-suite-reconnection">
        <connection-test:define-proxy-server-port serverPort="${toxiproxy.port}"/>
        <connection-test:create-proxy proxyPort="${connection.lost.port}" realHost="openssh" realPort="2222"/>
    </munit:before-suite>

    <munit:test name="sftp-copy-directories-with-reconnection" description="Perform a copy operation that copies a whole directory with reconnection">
        <munit:behavior>

            <set-variable variableName="fileContent" value="I just want to impress Mr. Stark"/>

            <sftp:create-directory config-ref="config-with-toxiproxy" directoryPath="copy-dir-test"/>
            <sftp:create-directory config-ref="config-with-toxiproxy" directoryPath="copy-dir-test/folder-to-copy"/>

            <sftp:write config-ref="config-with-toxiproxy" path="copy-dir-test/folder-to-copy/file1.txt">
                <sftp:content>#[vars.fileContent]</sftp:content>
            </sftp:write>
            <sftp:write config-ref="config-with-toxiproxy" path="copy-dir-test/folder-to-copy/file2.txt">
                <sftp:content>#[vars.fileContent]</sftp:content>
            </sftp:write>
            <sftp:write config-ref="config-with-toxiproxy" path="copy-dir-test/folder-to-copy/file3.txt">
                <sftp:content>#[vars.fileContent]</sftp:content>
            </sftp:write>
        </munit:behavior>
        <munit:execution>
            <connection-test:disconnect-proxy proxyPort="${connection.lost.port}"/>
            <async>
                <connection-test:reconnect-proxy proxyPort="${connection.lost.port}" />
                <logger level="ERROR" message="Reconnected proxy!" />
            </async>
            <sftp:copy config-ref="config-with-toxiproxy" sourcePath="copy-dir-test/folder-to-copy/"
                       targetPath="copy-dir-test/folder-copied" overwrite="false"
                       createParentDirectories="true"/>
        </munit:execution>
        <munit:validation>
            <sftp:read config-ref="config-with-toxiproxy" path="copy-dir-test/folder-copied/folder-to-copy/file1.txt"/>
            <munit-tools:assert>
                <munit-tools:that><![CDATA[#[import * from dw::test::Asserts
                                     ---
                                    payload must equalTo(vars.fileContent)
                                    ]]]>
                </munit-tools:that>
            </munit-tools:assert>
            <sftp:read config-ref="config-with-toxiproxy" path="copy-dir-test/folder-copied/folder-to-copy/file2.txt"/>
            <munit-tools:assert>
                <munit-tools:that><![CDATA[#[import * from dw::test::Asserts
                                     ---
                                    payload must equalTo(vars.fileContent)
                                    ]]]>
                </munit-tools:that>
            </munit-tools:assert>
            <sftp:read config-ref="config-with-toxiproxy" path="copy-dir-test/folder-copied/folder-to-copy/file3.txt"/>
            <munit-tools:assert>
                <munit-tools:that><![CDATA[#[import * from dw::test::Asserts
                                     ---
                                    payload must equalTo(vars.fileContent)
                                    ]]]>
                </munit-tools:that>
            </munit-tools:assert>
        </munit:validation>
    </munit:test>


</mule>